#!/usr/local/bin/octave -qf
#!/usr/octave -qf

% A simple RLS-LMS compression test.
% Uses sines embedded in noise.
% The residual is output via stdout.
% To listen do
% ./rls_lms_assa | sox -t f64 -c 1 -r $SAMPLE_RATE -d
% SAMPLE_RATE can be whatever, say 44100
% By Nicholas Esterer

clear;
N = 100000;  % length of signal
m = 32;     % number of sine tones to synthesize
A = 1;      % amplitude of sine tones
w0 = pi/64; % fundamental frequency
SNR = 18;   % signal to noise ratio in dB (base 10)
rho = sqrt((m*A^2)/(2*10^(SNR/10))); % standard deviation of noise 
lambda = 0.9999; % forgetting factor for RLS
p_rls = 4;       % RLS filter order
p_lms = 128;     % LMS filter order
be = 0.05;       % NLMS gradient coefficient

phi = rand(m,1)*2*pi; % phases of sinusoids
n = [1:N] - 1;        % sample indices
v = randn(1,N)*rho^2; % noise
x = sum(A*cos((1:m)'*n*w0+phi*ones(1,N)),1); % sum of sines
d = x + v; % sines plus noise

[A_,U] = rlspyk_analysis(d,p_rls,lambda);
[A_,E] = nlms_lp_analysis(U,be,p_lms);

% Normalize
scalar=max([max(E) -min(E)]);
E=E/scalar;
fwrite(stdout,E,'double');
